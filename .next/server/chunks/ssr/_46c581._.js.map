{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/lib/cn.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/components/container.tsx"],"sourcesContent":["import { cn } from \"@/app/lib/cn\";\nimport { HTMLAttributes, ReactNode, memo } from \"react\";\n\ninterface ContainerProps extends HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode;\n}\n\nconst Container = memo(function Container({\n  children,\n  className,\n  ...props\n}: ContainerProps) {\n  return (\n    <div className={cn(\"mx-auto px-7 md:container\", className)} {...props}>\n      {children}\n    </div>\n  );\n});\n\nexport default Container;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE,SAAS,UAAU,EACxC,QAAQ,EACR,SAAS,EACT,GAAG,OACY;IACf,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,gHAAA,CAAA,KAAE,AAAD,EAAE,6BAA6B;QAAa,GAAG,KAAK;kBAClE;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/components/filter.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/filter.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/filter.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/components/filter.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/components/filter.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/filter.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/page.tsx"],"sourcesContent":["import { marked } from \"marked\";\nimport Container from \"./components/container\";\nimport jobsApi from \"./lib/jobs-api\";\nimport Filter from \"./components/filter\";\n\nexport default async function Home() {\n\n\n  // fetch(jobsApi())\n  //     .then((response) => response.text())\n  //     .then((markdown) => {\n  //       // Convert the Markdown text to HTML using the marked library.\n  //       const htmlContent = marked.parse(markdown);\n  //       // Insert the HTML into the page.\n  //       console.log(htmlContent);\n  //     })\n  //     .catch((error) => console.error(\"Error fetching Markdown:\", error));\n\n  return (\n    <div className=\"\">\n      <Container>\n        <Filter />\n      </Container>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAEA;;;;AAEe,eAAe;IAG5B,mBAAmB;IACnB,2CAA2C;IAC3C,4BAA4B;IAC5B,uEAAuE;IACvE,oDAAoD;IACpD,0CAA0C;IAC1C,kCAAkC;IAClC,SAAS;IACT,2EAA2E;IAE3E,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,+HAAA,CAAA,UAAS;sBACR,cAAA,8OAAC,4HAAA,CAAA,UAAM;;;;;;;;;;;;;;;AAIf"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}