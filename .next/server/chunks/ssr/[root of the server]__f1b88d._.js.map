{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/lib/cn.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/components/container.tsx"],"sourcesContent":["import { cn } from \"@/app/lib/cn\";\nimport { HTMLAttributes, ReactNode, memo } from \"react\";\n\ninterface ContainerProps extends HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode;\n}\n\nconst Container = memo(function Container({\n  children,\n  className,\n  ...props\n}: ContainerProps) {\n  return (\n    <div className={cn(\"mx-auto px-7 md:container\", className)} {...props}>\n      {children}\n    </div>\n  );\n});\n\nexport default Container;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,OAAI,AAAD,EAAE,SAAS,UAAU,EACxC,QAAQ,EACR,SAAS,EACT,GAAG,OACY;IACf,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,gHAAA,CAAA,KAAE,AAAD,EAAE,6BAA6B;QAAa,GAAG,KAAK;kBAClE;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/lib/jobs-api.ts"],"sourcesContent":["const api = \"https://raw.githubusercontent.com/remoteintech/remote-jobs\";\n\nexport const jobsApi = () => `${api}/main/README.md`;\nexport const jobDetailsApi = (slug: string) => `${api}/main/${slug}`;\n"],"names":[],"mappings":";;;;AAAA,MAAM,MAAM;AAEL,MAAM,UAAU,IAAM,GAAG,IAAI,eAAe,CAAC;AAC7C,MAAM,gBAAgB,CAAC,OAAiB,GAAG,IAAI,MAAM,EAAE,MAAM"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/components/filter.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\n\ntype Props = {\n  keyword: string;\n  setKeyword: React.Dispatch<React.SetStateAction<string>>;\n};\n\nfunction Filter({ keyword, setKeyword }: Props) {\n  return (\n    <div className=\"flex py-4 gap-10\">\n      <div className=\"flex-1\">\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by Name\"\n            value={keyword}\n            onChange={(e) => setKeyword(e.target.value)}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n          />\n          <button className=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n            <svg\n              className=\"h-5 w-5 text-gray-500\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M21 21l-4.35-4.35M9 17a8 8 0 100-16 8 8 0 000 16z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"flex-1\">\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by Region\"\n            value={keyword}\n            onChange={(e) => setKeyword(e.target.value)}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n          />\n          <button className=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n            <svg\n              className=\"h-5 w-5 text-gray-500\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M21 21l-4.35-4.35M9 17a8 8 0 100-16 8 8 0 000 16z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"flex-1\">\n        <div className=\"relative\">\n          <label htmlFor=\"\">GGG</label>\n          <input\n            type=\"text\"\n            placeholder=\"Search by Technologies (eg. React, Node)\"\n            value={keyword}\n            onChange={(e) => setKeyword(e.target.value)}\n            className=\"w-full px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition\"\n          />\n          <button className=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n            <svg\n              className=\"h-5 w-5 text-gray-500\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M21 21l-4.35-4.35M9 17a8 8 0 100-16 8 8 0 000 16z\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Filter;\n"],"names":[],"mappings":";;;;AAAA;;AASA,SAAS,OAAO,EAAE,OAAO,EAAE,UAAU,EAAS;IAC5C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;4BAC1C,WAAU;;;;;;sCAEZ,8OAAC;4BAAO,WAAU;sCAChB,cAAA,8OAAC;gCACC,WAAU;gCACV,OAAM;gCACN,MAAK;gCACL,SAAQ;gCACR,QAAO;0CAEP,cAAA,8OAAC;oCACC,eAAc;oCACd,gBAAe;oCACf,aAAY;oCACZ,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;4BAC1C,WAAU;;;;;;sCAEZ,8OAAC;4BAAO,WAAU;sCAChB,cAAA,8OAAC;gCACC,WAAU;gCACV,OAAM;gCACN,MAAK;gCACL,SAAQ;gCACR,QAAO;0CAEP,cAAA,8OAAC;oCACC,eAAc;oCACd,gBAAe;oCACf,aAAY;oCACZ,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,SAAQ;sCAAG;;;;;;sCAClB,8OAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;4BAC1C,WAAU;;;;;;sCAEZ,8OAAC;4BAAO,WAAU;sCAChB,cAAA,8OAAC;gCACC,WAAU;gCACV,OAAM;gCACN,MAAK;gCACL,SAAQ;gCACR,QAAO;0CAEP,cAAA,8OAAC;oCACC,eAAc;oCACd,gBAAe;oCACf,aAAY;oCACZ,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQlB;uCAEe"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/assets/link.svg.mjs%20%28structured%20image%20object%29"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 24, height: 24, blurDataURL: null, blurWidth: 0, blurHeight: 0 }\n"],"names":[],"mappings":";;;AAAA;;uCACe;IAAE,KAAA,kHAAA,CAAA,UAAG;IAAE,OAAO;IAAI,QAAQ;IAAI,aAAa;IAAM,WAAW;IAAG,YAAY;AAAE"}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Ghayas/Projects/react/remote-jobs/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport Container from \"./components/container\";\nimport { jobsApi, jobDetailsApi as getJobDetails } from \"./lib/jobs-api\";\nimport Filter from \"./components/filter\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nimport linkIcon from \"./assets/link.svg\";\nimport Image from \"next/image\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { Chip } from \"@mui/material\";\n\ntype Company = {\n  id: number;\n  company: string;\n  url: string;\n  details: string;\n  regions: string;\n  technologies: string;\n};\n\nexport default function Home() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [jobs, setJobs] = useState<Array<Company>>([]);\n\n  console.log(jobs.map((job) => job.technologies));\n\n  useEffect(() => {\n    (async () => {\n      setJobs(await getJobs());\n    })();\n  }, []);\n\n  return (\n    <div className=\"\">\n      <Container>\n        <Filter keyword={keyword} setKeyword={setKeyword} />\n\n        <div className=\"overflow-x-auto pt-10\">\n          <DataGrid\n            rows={jobs}\n            columns={columns}\n            initialState={{ pagination: { paginationModel } }}\n            pageSizeOptions={[5, 10]}\n            disableRowSelectionOnClick\n            disableColumnResize\n            disableColumnMenu\n            sx={{\n              border: 0,\n              \".MuiDataGrid-columnHeader:focus,.MuiDataGrid-cell:focus\": {\n                outline: \"none\",\n              },\n            }}\n          />\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nconst columns: GridColDef[] = [\n  { field: \"id\", headerName: \"ID\", width: 50, sortable: false },\n  { field: \"company\", headerName: \"Company\", flex: 1 },\n  {\n    field: \"url\",\n    headerName: \"Website\",\n    flex: 1,\n    sortable: false,\n    renderCell: (params) => (\n      <a href={params.row.url} className=\"text-blue-600 hover:underline\">\n        {params.row.url}\n      </a>\n    ),\n  },\n  {\n    field: \"regions\",\n    headerName: \"Regions\",\n    flex: 3,\n    sortable: false,\n    renderCell: (params) => (\n      <div className=\"flex flex-wrap gap-1 items-center h-full\">\n        {params.row.regions\n          .split(\",\")\n          .map((region: string) => region.trim())\n          .map((region: string, idx: number) => (\n            <Chip\n              size=\"small\"\n              key={idx}\n              label={region}\n              sx={{ fontSize: 12, paddingInline: 0.5, fontWeight: 500 }}\n            />\n          ))}\n      </div>\n    ),\n  },\n  {\n    field: \"details\",\n    headerName: \"Details\",\n    description: \"This column has a value getter and is not sortable.\",\n    sortable: false,\n    width: 100,\n    valueGetter: (value, row) => `${row.firstName || \"\"} ${row.lastName || \"\"}`,\n    renderCell: (params) => (\n      <a\n        className=\"h-full mx-auto grid place-content-center\"\n        href={params.row.details}\n      >\n        <Image src={linkIcon} alt=\"Link Icon\" width={15} height={15} />\n      </a>\n    ),\n  },\n];\n\nconst paginationModel = { page: 0, pageSize: 10 };\n\nconst getJobs = async () => {\n  const { data } = await axios.get(jobsApi());\n  const array: Array<string> = data\n    .split(\"------------ | ------- | -------\\n\")[1]\n    .split(\"\\n\");\n  const jobs = array.map(async (item, idx) => {\n    const [namePart, url, regions] = item.split(\"|\");\n    const companyMatch = namePart.match(/\\[(.*?)\\]\\((.*?)\\)/);\n    let technologies = \"\";\n\n    if (companyMatch !== null) {\n      try {\n        const { data } = await axios.get(getJobDetails(companyMatch[2].trim()));\n        technologies = data\n          ?.split(\"Company technologies\")[1]\n          ?.split(\"Office locations\")[0];\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    return companyMatch && url && regions && technologies\n      ? {\n          id: idx + 1,\n          company: companyMatch ? companyMatch[1] : \"\",\n          url: url.trim(),\n          details: companyMatch ? companyMatch[2].trim() : \"\",\n          regions: regions,\n          technologies: technologies.toLowerCase(),\n        }\n      : \"\";\n  });\n\n  const filteredJobs = (await Promise.all(jobs)).filter((job) => job !== \"\");\n\n  return filteredJobs;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}